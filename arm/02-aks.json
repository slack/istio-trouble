{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of agent nodes for the cluster."
      },
      "minValue": 1,
      "maxValue": 50
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "osType": {
      "type": "string",
      "defaultValue": "Linux",
      "allowedValues": [
        "Linux",
        "Windows"
      ],
      "metadata": {
        "description": "The operating system."
      }
    },
    "maxPods": {
      "type": "int",
      "defaultValue": 110,
      "metadata": {
        "description": "max pods per node"
      }
    },
    "networkPlugin": {
      "type": "string",
      "defaultValue": "azure",
      "allowedValues": [
        "kubenet",
        "azure"
      ],
      "metadata": {
        "description": "IPAM plugin for AKS"
      }
    },
    "networkPolicy": {
      "type": "string",
      "defaultValue": "azure",
      "allowedValues": [
        "none",
        "calico",
        "azure"
      ],
      "metadata": {
        "description": "Network policy plugin for AKS"
      }
    },
    "serviceCidr": {
      "type": "string",
      "metadata": {
        "description": "Kubernetes service range"
      }
    },
    "dnsServiceIP": {
      "type": "string",
      "metadata": {
        "description": "IP address for Kubernetes DNS service"
      }
    },
    "dockerBridgeCidr": {
      "type": "string",
      "metadata": {
        "description": "IP address for Docker bridge"
      }
    },
    "vnetSubnetIDNodes1": {
      "type": "string",
      "metadata": {
        "description": "Azure Resource Manager ID for the Subnet to hold AKS Net"
      }
    },
    "vnetSubnetIDNodes2": {
      "type": "string",
      "metadata": {
        "description": "Azure Resource Manager ID for the Subnet to hold AKS Net"
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.14.0",
      "allowedValues": [
        "1.11.9",
        "1.12.7",
        "1.13.5",
        "1.14.0"
      ],
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "servicePrincipalClientId": {
      "type": "securestring",
      "metadata": {
        "description": "The Service Principal Client Secret."
      }
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    }
  },
  "variables": {
    "agentCount": "[parameters('agentCount')]",
    "agentVMSize": "[parameters('agentVMSize')]",
    "dnsPrefix": "[parameters('dnsPrefix')]",
    "dnsServiceIP": "[parameters('dnsServiceIP')]",
    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
    "kubernetesVersion": "[parameters('kubernetesVersion')]",
    "networkPlugin": "[parameters('networkPlugin')]",
    "networkPolicy": "[parameters('networkPolicy')]",
    "maxPods": "[parameters('maxPods')]",
    "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
    "osType": "[parameters('osType')]",
    "resourceName": "[parameters('resourceName')]",
    "serviceCidr": "[parameters('serviceCidr')]",
    "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
    "servicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
    "vnetSubnetIDNodes1": "[parameters('vnetSubnetIDNodes1')]",
    "vnetSubnetIDNodes2": "[parameters('vnetSubnetIDNodes2')]"
  },
  "resources": [
    {
      "apiVersion": "2019-04-01",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[resourceGroup().location]",
      "name": "[variables('resourceName')]",
      "properties": {
        "kubernetesVersion": "[variables('kubernetesVersion')]",
        "dnsPrefix": "[variables('dnsPrefix')]",
        "enableRBAC": true,
        "agentPoolProfiles": [
          {
            "name": "nodes1",
            "type": "VirtualMachineScaleSets",
            "osDiskSizeGB": "[variables('osDiskSizeGB')]",
            "count": "[variables('agentCount')]",
            "vmSize": "[variables('agentVMSize')]",
            "osType": "[variables('osType')]",
            "vnetSubnetID": "[variables('vnetSubnetIDNodes1')]",
            "maxPods": "[variables('maxPods')]",
            "storageProfile": "ManagedDisks",
            "enableAutoScaling": false
          },
          {
            "name": "nodes2",
            "type": "VirtualMachineScaleSets",
            "osDiskSizeGB": "[variables('osDiskSizeGB')]",
            "count": "[variables('agentCount')]",
            "vmSize": "[variables('agentVMSize')]",
            "osType": "[variables('osType')]",
            "vnetSubnetID": "[variables('vnetSubnetIDNodes2')]",
            "maxPods": "[variables('maxPods')]",
            "storageProfile": "ManagedDisks",
            "enableAutoScaling": true,
            "minCount": 3,
            "maxCount": 10
          }
        ],
        "servicePrincipalProfile": {
          "clientId": "[variables('servicePrincipalClientId')]",
          "secret": "[variables('servicePrincipalClientSecret')]"
        },
        "networkProfile": {
          "networkPlugin": "[variables('networkPlugin')]",
          "networkPolicy": "[variables('networkPolicy')]",
          "serviceCidr": "[variables('serviceCidr')]",
          "dnsServiceIP": "[variables('dnsServiceIP')]",
          "dockerBridgeCidr": "[variables('dockerBridgeCidr')]",
          "loadBalancerSku": "standard"
        }
      }
    }
  ],
  "outputs": {
    "AKS": {
      "type": "object",
      "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', variables('resourceName')))]"
    }
  }
}